buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies { classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT' }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.7"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

ext.buildnumber = 0
if (System.getenv('BUILD_NUMBER') != null)
    project.buildnumber = System.getenv('BUILD_NUMBER')
else
    logger.lifecycle "No build number detected, setting to 0"

group = "com.enderio.fixer"
archivesBaseName = "EnderFixer"
version = "${minecraft_version}-${mod_version}.${buildnumber}"

boolean dev = System.getenv("RELEASE") == null || System.getenv("RELEASE").equalsIgnoreCase("false")

def type = 'release'
if (project.hasProperty('mod_appendix')) {
    version += "-${project.mod_appendix}"
	type = project.mod_appendix
}

minecraft {
    mappings = "snapshot_20160518"
    version = "${minecraft_version}-${forge_version}"
    runDir = 'run'

    replace "@VERSION@", project.version
    replaceIn "EnderFixerPlugin.java"
}

configurations {
    compile.extendsFrom exportedCompile
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'resources'
        }
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

jar {
    from { configurations.exportedCompile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'FMLCorePlugin': 'com.enderio.fixer.EnderFixerPlugin'
		attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

build.dependsOn sourceJar

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            from components.java

			artifact sourceJar
        }
    }

    repositories {
        if (project.hasProperty('mavendir')) {
            maven { url mavendir }
        } else {
            mavenLocal()
        }
    }
}

tasks.curseforge.enabled = !dev && project.hasProperty('curseforge_key')
    
curseforge {
    if (project.hasProperty('curseforge_key')) {
        apiKey = project.curseforge_key
    }

    project {
        id = project.projectId
        changelog = System.getenv('CHANGELOG') == null || System.getenv('CHANGELOG').equals('none') ? '' : System.getenv('CHANGELOG')
        changelogType = 'html'
        releaseType = type
        mainArtifact(jar) {
            displayName = "${archivesBaseName} - ${version}"
        }
    }
}